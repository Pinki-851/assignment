{"version":3,"sources":["components/Card/Card.js","screens/HomeScreen/HomeScreen.js","store/Action/Action.js","App.js","store/Reducer/Reducer.js","store/index.js","index.js"],"names":["Card","props","className","src","cardData","thumbnailUrl","alt","id","title","connect","state","cardReducer","dispatch","getCardData","getState","a","axios","get","data","type","payload","useEffect","getData","map","val","App","initialState","CardReducer","action","RootReducer","combineReducers","Store","createStore","compose","applyMiddleware","thunk","composeWithDevTools","ReactDOM","render","store","document","getElementById"],"mappings":"iRAsBeA,EAnBF,SAACC,GAEZ,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,qBACEC,IAAKF,EAAMG,SAASC,aACpBH,UAAU,WACVI,IAAI,gBAGR,qBAAKJ,UAAU,mBAAf,SAAmCD,EAAMG,SAASG,KAClD,qBAAKL,UAAU,mBAAf,SACE,qBAAKA,UAAU,aAAf,SAA6BD,EAAMG,SAASI,c,iBCmBrCC,G,MAAAA,aARS,SAACC,GACvB,MAAO,CAAEN,SAAUM,EAAMC,YAAYP,aAEZ,SAACQ,GAC1B,MAAO,CACLC,YAAa,kBAAMD,EC9BI,uCAAM,WAAOA,EAAUE,GAAjB,iBAAAC,EAAA,sEACRC,IAAMC,IAC3B,wDAF6B,gBACvBC,EADuB,EACvBA,KAIRN,EAAS,CAAEO,KAAM,gBAAiBC,QAASF,IALZ,2CAAN,6DDiCZT,EA7BI,SAACR,GAClBoB,qBAAU,WACRC,MACC,IACH,IAAMA,EAAO,uCAAG,sBAAAP,EAAA,sEACRd,EAAMY,cADE,2CAAH,qDAGLT,EAAaH,EAAbG,SAER,OACE,sBAAKF,UAAU,uBAAf,UACE,oBAAIA,UAAU,eAAd,+BACA,sBAAKA,UAAU,iBAAf,UACGE,EAASmB,KAAI,SAACC,GACb,OAAO,cAAC,EAAD,CAAmBpB,SAAUoB,GAAlBA,EAAIjB,OAExB,qBAAKL,UAAU,yBEfRuB,MAJf,WACE,OAAO,cAAC,EAAD,K,QCJHC,EAAe,CAAEtB,SAAU,IASlBuB,EARK,WAAmC,IAAlCjB,EAAiC,uDAAzBgB,EAAcE,EAAW,uCACpD,MACO,kBADCA,EAAOT,KAEJ,2BAAKT,GAAZ,IAAmBN,SAAUwB,EAAOR,UAE7BV,G,uBCAPmB,EAAcC,0BAAgB,CAAEnB,YAAagB,IAKpCI,EAJDC,sBACZH,EACAI,kBAAQC,0BAAgBC,KAAQC,kCCHlCC,IAASC,OACP,cAAC,IAAD,CAAUC,MAAOR,EAAjB,SACE,cAAC,EAAD,MAGFS,SAASC,eAAe,W","file":"static/js/main.e168af66.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  // console.log(props);\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card_img_container\">\r\n        <img\r\n          src={props.cardData.thumbnailUrl}\r\n          className=\"card_img\"\r\n          alt=\"cardImage\"\r\n        />\r\n      </div>\r\n      <div className=\"card_circle_icon\">{props.cardData.id}</div>\r\n      <div className=\"card_description\">\r\n        <div className=\"card_title\">{props.cardData.title}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Card from \"../../components/Card/Card\";\r\nimport { getCardData } from \"../../store/Action/Action\";\r\nimport \"./HomeScreen.css\";\r\n\r\nconst HomeScreen = (props) => {\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n  const getData = async () => {\r\n    await props.getCardData();\r\n  };\r\n  const { cardData } = props;\r\n\r\n  return (\r\n    <div className=\"homescreen_container\">\r\n      <h1 className=\"page_heading\">just random cards</h1>\r\n      <div className=\"card_container\">\r\n        {cardData.map((val) => {\r\n          return <Card key={val.id} cardData={val} />;\r\n        })}\r\n        <div className=\"extra_card\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return { cardData: state.cardReducer.cardData };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getCardData: () => dispatch(getCardData()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeScreen);\r\n","import axios from \"axios\";\r\n\r\nexport const getCardData = () => async (dispatch, getState) => {\r\n  const { data } = await axios.get(\r\n    \"https://jsonplaceholder.typicode.com/albums/1/photos\"\r\n  );\r\n  // console.log(data);\r\n  dispatch({ type: \"GET_CARD_DATA\", payload: data });\r\n};\r\n","import \"./App.css\";\nimport HomeScreen from \"./screens/HomeScreen/HomeScreen\";\n\nfunction App() {\n  return <HomeScreen />;\n}\n\nexport default App;\n","const initialState = { cardData: [] };\r\nconst CardReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_CARD_DATA\":\r\n      return { ...state, cardData: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default CardReducer;\r\n","import CardReducer from \"./Reducer/Reducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nconst RootReducer = combineReducers({ cardReducer: CardReducer });\r\nconst Store = createStore(\r\n  RootReducer,\r\n  compose(applyMiddleware(thunk), composeWithDevTools())\r\n);\r\nexport default Store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./store\";\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}